/*
 ID: kvseeth1
 LANG: JAVA
 PROG: transform
 */
import java.io.*;
import java.util.*;

public class transform
{
  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new FileReader("transform.in"));
    PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("transform.out")));
    int n = Integer.parseInt(br.readLine());
    String currentRow;
    char[][] originalDesign = new char[n][n];
    char[][] newDesign = new char[n][n];
    boolean transformOne = true;
    boolean transformTwo = true;
    boolean transformThree = true;
    boolean transformFour = true;
    boolean transformFiveOne = true;
    boolean transformFiveTwo = true;
    boolean transformFiveThree = true;
    boolean transformSix = true;
    
    for (int i = 0; i < n; i++) {
      currentRow = br.readLine();
      for (int j = 0; j < n; j++) {
        originalDesign[i][j] = currentRow.charAt(j);
      }
    }
    for (int i = 0; i < n; i++) {
      currentRow = br.readLine();
      for (int j = 0; j < n; j++) {
        newDesign[i][j] = currentRow.charAt(j);
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[i][j]) {
          transformSix = false;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[i][n-1-j]) {
          transformFour = false;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[j][n-1-i]) {
          transformOne = false;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[n-1-i][n-1-j]) {
          transformTwo = false;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[n-1-j][i]) {
          transformThree = false;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[n-1-j][n-1-i]) {
          transformFiveOne = false;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[n-1-i][j]) {
          transformFiveTwo = false;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (originalDesign[i][j] != newDesign[j][i]) {
          transformFiveThree = false;
        }
      }
    }
    if (transformOne == true) {
      pw.print(1+"\n");
    }
    else if (transformTwo == true) {
      pw.print(2+"\n");
    }
    else if (transformThree == true) {
      pw.print(3+"\n");
    }
    else if (transformFour == true) {
      pw.print(4+"\n");
    }
    else if (transformFiveOne == true || transformFiveTwo == true || transformFiveThree == true) {
      pw.print(5+"\n");
    }
    else if (transformSix == true) {
      pw.print(6+"\n");
    }
    else {
      pw.print(7+"\n");
    }
    pw.close();
  }
}
